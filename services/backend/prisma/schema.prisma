datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../prisma/generated/type-graphql"
}

model User {
  id        Int            @id @default(autoincrement())
  createdAt DateTime       @default(now())
  email     String         @unique
  firstName String?
  lastName  String?
  password  String?
  role      Role           @default(USER)
  social    Json?
  tokens    RefreshToken[] @relation(name: "RefreshTokenToUser")
  count Int @default(0)
}

model RefreshToken {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  type       TokenType
  token      String?   @unique
  valid      Boolean   @default(true)
  expiration DateTime
  user       User      @relation(name: "RefreshTokenToUser", fields: [userId], references: [id])
  userId     Int
}

enum Role {
  USER
  ADMIN
}

enum TokenType {
  EMAIL
  API
}
